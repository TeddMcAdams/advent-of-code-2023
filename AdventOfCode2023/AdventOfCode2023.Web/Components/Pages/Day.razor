@page "/day/{dayId:int}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@attribute [StreamRendering]

@inject AdventOfCodeApiClient AdventOfCodeApi
@inject NavigationManager NavigationManager

<PageTitle>Day @DayId</PageTitle>

<h1>Day @DayId</h1>

@if (_daysPuzzleData is null)
{
    <p><em>Running puzzles...</em></p>
}
else
{
    <div class="btn-toolbar justify-content-between py-2">
        <div class="btn-group py-2">
            <NavLink class="btn btn-dark advent-of-code-title" href="@(_daysPuzzleData.LinkToAdventOfCodeDay)" target="_blank">
                :: Advent of Code Day @DayId
            </NavLink>
        </div>
        <div class="btn-group py-2">
            <NavLink class="btn btn-secondary" href="@(_daysPuzzleData.LinkToSolutionCode)" target="_blank">
                <i class="bi bi-github mx-2"></i> See my solution in C#
            </NavLink>
        </div>
    </div>

    <SolutionsCard Solutions=_daysPuzzleData.Solutions ExampleInput=_daysPuzzleData.ExampleInput Input=_daysPuzzleData.Input />
}

@code {
    private AdventOfCodeDay? _daysPuzzleData;


    [Parameter]
    public int DayId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (_daysPuzzleData is null)
        {
            _daysPuzzleData = await AdventOfCodeApi.GetPuzzleDataForDay(DayId);
        }
    }


}
